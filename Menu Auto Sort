#include <stdio.h>
#include <stdlib.h>

typedef  struct simpul dnode;

struct simpul
{
    int data;
    dnode *prev, *next;
};

void alokasi();
void tampil();
void menu();
void bebas();
void cari();
void hapusdata();
void sisip();

dnode *p=NULL;
dnode *head=NULL;
dnode *hapus=NULL;
int depan;
int belakang;

int main()
{
    do
    {
        menu();
    }
    while(1);
    return 0;
}

void menu()
{
    int pilih;
    printf("Menu : \n");
    printf("1. Tambah Data\n");
    printf("2. Cari Data\n");
    printf("3. Hapus Data\n");
    printf("4. Keluar\n");
    printf("Silahkan pilih : ");
    scanf("%d", &pilih);
    fflush(stdin);
    if(pilih==1)
    {
        alokasi();
        sisip();
        tampil();
    }
    else if(pilih==2)
    {
        if(head==NULL)
        {
            printf("Belum ada SLL, pilih tambah data dahulu\n\n");
            menu();
        }
        cari();
        printf("Data dalam SLL : \n");
        tampil();
    }
    else if(pilih==3)
    {
        if(head==NULL)
        {
            printf("Belum ada SLL, pilih tambah data dahulu\n\n");
            menu();
        }
        hapusdata();
        tampil();
    }
    else
        exit(0);
}

void sisip()
{
    int data=p->data;
    if(head==NULL||data<=depan)
    {
        if(head!=NULL)
        {
            p->next=head;
            head->prev=p;
        }
        head=p;
        depan=data;
    }
    else if(data>=belakang)
    {
        dnode *tail=head;
        if(head==NULL)
            head=p;
        else
        {
            while(tail->next!=NULL)
                tail=tail->next;
            p->prev=tail;
            tail->next=p;
            tail=p;
        }
        belakang=data;
    }
    else
    {
        dnode *bef=head;
        while(bef->data < data)
            bef=bef->next;
        p->next=bef;
        p->prev=bef->prev;
        if(bef->prev!=NULL)
            bef->prev->next=p;
        bef->prev=p;
    }
}

void hapusdata()
{
    hapus=head;
    int key;
    printf("Delete data : ");
    scanf("%d", &key);
    fflush(stdin);
    if(head->data==key)
    {
        head=hapus->next;
        head->prev=NULL;
    }
    else
    {
        while(hapus->data!=key)
        {
            if(hapus->next==NULL)
            {
                printf("Key tidak ada \n");
                menu();
            }
            hapus=hapus->next;

        }
        if(hapus->next!=NULL)
            hapus->next->prev=hapus->prev;
        hapus->prev->next=hapus->next;
    }
    bebas();
}

void cari()
{
    int key;
    int sum=0;
    dnode *cari=head;
    printf("Masukkan data yang ingin dicari : ");
    scanf("%d", &key);
    fflush(stdin);
    while(cari!=NULL)
    {
        if(cari->data==key)
            sum++;
        cari=cari->next;
    }
    if(sum==0)
        printf("%d tidak ada dalam SLL\n\n", key);
    printf("%d ada sebanyak %d dalam SLL\n\n", key, sum);
}

void alokasi()
{
    p=(dnode*)malloc(sizeof(dnode));
    if(p==NULL)
    {
        printf("Gagal");
        exit(0);
    }
    else
    {
        printf("Masukkan nilai : ");
        scanf("%d", &p->data);
        fflush(stdin);
        p->next=NULL;
        p->prev=NULL;
    }
}

void bebas()
{
    free(hapus);
    hapus=NULL;
}

void tampil()
{
    dnode *p=head;
    do
    {
        printf("%d\n", p->data);
        p=p->next;
    }
    while(p!=NULL);
    puts("");
}
